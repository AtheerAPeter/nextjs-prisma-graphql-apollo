// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  name      String
  email     String    @unique
  password  String
  active    Boolean   @default(true)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  invoices  Invoice[]
}

model Product {
  id           Int            @id @default(autoincrement())
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  name         String
  InvoiceItems InvoiceItems[]
  price        String
  description  String?
  currency     String?
  addedBy      Admin?         @relation("creator", fields: [adminId], references: [id])
  editedBy     Admin?         @relation("editor", fields: [editorId], references: [id])
  editorId     Int?
  active       Boolean?       @default(true)
  adminId      Int?
  image        String?
  rating       String?        @default("2")
}

model InvoiceItems {
  id        Int      @id @default(autoincrement())
  subTotal  Int?
  amount    Int?
  invoice   Invoice? @relation(fields: [invoiceId], references: [id])
  product   Product? @relation(fields: [productId], references: [id])
  invoiceId Int?
  productId Int?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Invoice {
  id           Int            @id @default(autoincrement())
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  user         User           @relation(fields: [userId], references: [id])
  userId       Int
  invoiceItems InvoiceItems[]
  total        Int
}

model Admin {
  id             Int       @id @default(autoincrement())
  name           String
  email          String    @unique
  password       String
  active         Boolean   @default(true)
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  Product_added  Product[] @relation("creator")
  Product_edited Product[] @relation("editor")
}
